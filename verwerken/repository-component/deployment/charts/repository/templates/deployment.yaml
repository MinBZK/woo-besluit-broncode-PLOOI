apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "repository.fullname" . }}
  labels:
    app.kubernetes.io/component: repository
    {{- include "repository.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "repository.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "repository.labels" . | nindent 8 }}
        {{- include "repository.selectorLabels" . | nindent 8 }}
        {{- if .Values.podLabels }}
          {{- include "common.tplvalues.render" (dict "value" .Values.podLabels "context" $) | nindent 8 }}
        {{- end }}
        timestamp: "{{ now | unixEpoch }}"
      {{- if and .Values.persistence.enabled .Values.persistence.backup }}
      annotations:
        backup.velero.io/backup-volumes: {{ include "repository.fullname" . }}-repository-volume
      {{- end }}
    spec:
      imagePullSecrets:
        - name: harbor-puller
      {{- if .Values.persistence.enabled }}
      volumes:
        - name: {{ include "repository.fullname" . }}-repository-volume
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingRepositoryClaim }}
        {{- if .Values.persistence.backup }}
        - name: {{ include "repository.fullname" . }}-backup-volume
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingBackupClaim }}
        {{- end }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: {{ .Values.image.registry }}repository-service:{{ .Values.image.tag | default .Chart.AppVersion }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: OTEL_SERVICE_NAME
              value: {{ include "repository.fullname" . }}
            - name: OTEL_TRACES_EXPORTER
              value: {{ .Values.opentelemetry.traces.exporter }}
            - name: OTEL_METRICS_EXPORTER
              value: {{ .Values.opentelemetry.metrics.exporter }}
            {{- if .Values.opentelemetry.enabled }}
            - name: OTEL_EXPORTER_JAEGER_ENDPOINT
              value: {{ .Values.opentelemetry.exporter.jaeger.endpoint }}
            {{- end }}
            - name: REPOS_DB_URL
            {{- if .Values.database.url }}
              value: {{ .Values.database.url }}
            {{- end }}
            {{- if .Values.database.secret }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.secret }}
                  key: pgbouncer-jdbc-uri
            {{- end }}
            - name: LOG_LEVEL_KOOP
              value: {{ .Values.logLevel }}
            {{- if .Values.extraJvmArgs }}
            - name: JAVA_TOOL_OPTIONS
              value: {{ .Values.extraJvmArgs }}
            {{- end }}
            - name: PROCESS_URL
              value: {{ .Values.process.url }}
          ports:
            - name: srvc-port
              containerPort: 8010
            - name: actr-port
              containerPort: 8011
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: actr-port
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: actr-port
          startupProbe:
            httpGet:
              path: /actuator/health/liveness
              port: actr-port
            failureThreshold: 20
          {{- if .Values.persistence.enabled }}
          volumeMounts:
            - mountPath: "/plooi-repos"
              name: {{ include "repository.fullname" . }}-repository-volume
            {{- if .Values.persistence.backup }}
            - mountPath: "/plooi-backup"
              name: {{ include "repository.fullname" . }}-backup-volume
            {{- end }}
          {{- end }}
          {{- if .Values.resources }}
          resources: {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
