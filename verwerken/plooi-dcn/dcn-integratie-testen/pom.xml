<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>nl.overheid.koop.plooi</groupId>
		<artifactId>plooi-core-parent</artifactId>
		<version>2.0.7-SNAPSHOT</version>
		<relativePath>../parent/pom.xml</relativePath>
	</parent>
	<artifactId>dcn-integratie-testen</artifactId>
	<packaging>jar</packaging>
	<name>PLOOI DCN Integration Testing</name>
	<description>Contains BDD Cucumber tests for DCN</description>

	<properties>
		<cucumber.version>7.1.0</cucumber.version>
		<cucumber-reporting.version>5.6.1</cucumber-reporting.version>
		<junit-platform-suite.version>1.8.1</junit-platform-suite.version>
        <dcn-admin-url>http://localhost:18080</dcn-admin-url>
        <dcn-actuator-url>http://localhost:18081</dcn-actuator-url>
        <mockserver-url-intern>dcn-mockserver:1080</mockserver-url-intern>
        <mockserver-url-extern>localhost:1080</mockserver-url-extern>
        <solr-core-url>http://localhost:18983/solr/plooi</solr-core-url>
		<repository-service-url>http://localhost:18010</repository-service-url>
        <registration-service-url>http://localhost:18020</registration-service-url>
	</properties>

	<dependencies>
        <!--
           -  To get coverage reporting, we need to add all components in DCN as a dependency here.
           -  Jacoco's aggregate report needs this to have access to classes and sources of code under test.
          -->
        <dependency>
            <groupId>nl.overheid.koop.plooi</groupId>
            <artifactId>dcn-application</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>nl.overheid.koop.plooi</groupId>
            <artifactId>dcn-admin-service</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>nl.overheid.koop.plooi</groupId>
            <artifactId>process-service</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>nl.overheid.koop.plooi</groupId>
            <artifactId>dcn-components</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>nl.overheid.koop.plooi</groupId>
            <artifactId>dcn-model</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>nl.overheid.koop.plooi</groupId>
            <artifactId>dcn-repository</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>nl.overheid.koop.plooi</groupId>
            <artifactId>dcn-routes</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>nl.overheid.koop.plooi</groupId>
            <artifactId>dcn-solr</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>nl.overheid.koop.plooi</groupId>
            <artifactId>document-mapper</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>nl.overheid.koop.plooi</groupId>
            <artifactId>aanleverloket</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>nl.overheid.koop.plooi</groupId>
            <artifactId>dcn-api</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>nl.overheid.koop.plooi</groupId>
            <artifactId>officielebekendmakingen</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>nl.overheid.koop.plooi</groupId>
            <artifactId>ori</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>nl.overheid.koop.plooi</groupId>
            <artifactId>rijksoverheidnl</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>nl.overheid.koop.plooi</groupId>
            <artifactId>roo</artifactId>
            <version>${project.version}</version>
        </dependency>

		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-java</artifactId>
			<version>${cucumber.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-junit-platform-engine</artifactId>
			<version>${cucumber.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>net.masterthought</groupId>
			<artifactId>cucumber-reporting</artifactId>
			<version>${cucumber-reporting.version}</version>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-suite</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>nl.overheid.koop.plooi</groupId>
			<artifactId>test-utils</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- logging -->
		<dependency>
			<groupId>net.logstash.logback</groupId>
			<artifactId>logstash-logback-encoder</artifactId>
		</dependency>

		<!-- spring context integration with cucumber -->
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-spring</artifactId>
			<version>${cucumber.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- Using this dependency to configure spring-context configuration
			 so that we won't need SpringBoot heavy dependencies -->
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-test</artifactId>
		</dependency>

	</dependencies>

	<profiles>
		<profile>
			<id>integration-tests</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<executions>
							<execution>
								<goals>
									<goal>integration-test</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<skipTests>false</skipTests>
							<failIfNoTests>false</failIfNoTests>
							<testSourceDirectory>${project.basedir}/src/test/java</testSourceDirectory>
                            <environmentVariables>
                                <DCN_ADMIN_URL>${dcn-admin-url}</DCN_ADMIN_URL>
                                <DCN_ACTUATOR_URL>${dcn-actuator-url}</DCN_ACTUATOR_URL>
                                <MOCKSERVER_INTERNAL_URL>${mockserver-url-intern}</MOCKSERVER_INTERNAL_URL>
                                <MOCKSERVER_EXTERNAL_URL>${mockserver-url-extern}</MOCKSERVER_EXTERNAL_URL>
                                <SOLR_CORE_URL>${solr-core-url}</SOLR_CORE_URL>
                                <REPOSITORY_SERVICE_URL>${repository-service-url}</REPOSITORY_SERVICE_URL>
								<REGISTRATION_SERVICE_URL>${registration-service-url}</REGISTRATION_SERVICE_URL>
                            </environmentVariables>
						</configuration>
					</plugin>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <version>${maven-jacoco-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>default-prepare-agent</id>
                                <configuration>
                                    <skip>true</skip>
                                </configuration>
                            </execution>
                            <execution>
                                <id>default-dump</id>
                                <goals>
                                    <goal>dump</goal>
                                </goals>
                                <phase>post-integration-test</phase>
                                <configuration>
                                    <skip>false</skip>
                                    <destFile>${project.build.directory}/jacoco-it.exec</destFile>
                                </configuration>
                            </execution>
                            <execution>
                                <id>default-report</id>
                                <configuration>
                                    <skip>true</skip>
                                </configuration>
                            </execution>
                            <execution>
                                <id>default-report-aggregate</id>
                                <goals>
                                    <goal>report-aggregate</goal>
                                </goals>
                                <phase>verify</phase>
                            </execution>
                        </executions>
                    </plugin>
				</plugins>
			</build>
		</profile>
       <profile>
           <id>integration-tests-compose</id>
           <build>
               <plugins>
                   <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>3.0.0</version>
                        <executions>
                            <execution>
                                <id>docker-compose-up</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>docker</executable>
                                    <arguments>
                                        <argument>compose</argument>
                                        <argument>--file</argument>
                                        <argument>${basedir}/src/main/resources/docker-compose.yml</argument>
                                        <argument>--project-name</argument>
                                        <argument>${project.artifactId}</argument>
                                        <argument>up</argument>
                                        <argument>--detach</argument>
                                    </arguments>
                                </configuration>
                            </execution>

                            <execution>
                                <id>docker-compose-down</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>docker</executable>
                                    <arguments>
                                        <argument>compose</argument>
                                        <argument>--file</argument>
                                        <argument>${basedir}/src/main/resources/docker-compose.yml</argument>
                                        <argument>--project-name</argument>
                                        <argument>${project.artifactId}</argument>
                                        <argument>down</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
               </plugins>
           </build>
       </profile>
	</profiles>

</project>
